import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

// generated by shadcn
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

// created by chatgpt
export function isBase64Image(imageData: string) {
  const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
  return base64Regex.test(imageData);
}

// created by chatgpt
export function formatDateString(dateString: string) {
  const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "short",
    day: "numeric",
  };

  const date = new Date(dateString);
  const formattedDate = date.toLocaleDateString(undefined, options);

  const time = date.toLocaleTimeString([], {
    hour: "numeric",
    minute: "2-digit",
  });

  return `${time} - ${formattedDate}`;
}

// created by chatgpt
export function formatThreadCount(count: number): string {
  if (count === 0) {
    return "No Threads";
  } else {
    const threadCount = count.toString().padStart(2, "0");
    const threadWord = count === 1 ? "Thread" : "Threads";
    return `${threadCount} ${threadWord}`;
  }
}

export function timeDifferenceForDate(date: Date) {
  const timeDifference = Math.floor((Date.now() - date.getTime()) / 1000); // Difference in seconds

  let timeString = "";
  if (timeDifference < 60) {
    timeString = `${timeDifference}s`; // Append "s" for seconds
  } else if (timeDifference < 3600) {
    const minutes = Math.floor(timeDifference / 60);
    timeString = `${minutes}m`; // Append "m" for minutes
  } else if (timeDifference < 86400) {
    const hours = Math.floor(timeDifference / 3600);
    timeString = `${hours}h`; // Append "h" for hours
  } else if (timeDifference < 31536000) {
    const days = Math.floor(timeDifference / 86400);
    timeString = `${days}d`; // Append "d" for days
  } else {
    const years = Math.floor(timeDifference / 31536000);
    timeString = `${years}y`; // Append "y" for years
  }

  return timeString;
}

//Write a function that only return the month of the date having recived a date string
export function getMonth(dateString: string) {
  const date = new Date(dateString);
  return date.toLocaleString("default", { month: "long" });
}
